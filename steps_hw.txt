GitHub. HW_2
1. На локальном репозитории сделать ветки для:
	Создать на web интерфейсе репозиторий GitHub_HW_2
	git clone https://github.com/sharipova-nata2016/GitHub_HW_2.git
	cd GitHub_HW_2
- Postman
	git branch Postman
- Jmeter
	git branch Jmeter
- CheckLists
	git branch CheckLists
- Bag Reports
	git branch Bag_Reports
- SQL
	git branch SQL
- Charles
	git branch Charles
- Mobile testing
	git branch Mobile_testing

2. Запушить все ветки на внешний репозиторий
	git push origin --all -u
3. В ветке Bag Reports сделать текстовый документ со структурой баг репорта
	git checkout Bag_Reports
	touch bag_report.txt
	vim bag_report.txt
	insert

Структура баг-репорта
Заголовок/краткое описание (Title)              Краткое описание проблемы, указывающее на дефект.
Номер версии (Version)                          Версия продукта на которой была найдена ошибка.
Серьезность (Severity)                          Влияние дефекта на работоспособность приложения.             


Приоритет (Priority)                            Атрибут, указывающий на очередность устранения дефекта.      
Статус (Status)                                 На какой ступени жизненого цикла баг находится в данный момент.
Автор (Author)                                  Кто составил баг-репорт.
Исполнитель
(Assigned To)                                   Кто в данный момент работает на дефектом.
Окружение                                       Информация об окружении, на котором был найден баг.

Шаги воспроизведения (Steps to Reproduce)       Шаги, по которым можно быстро и легко воспроизвести баг.
Фактический Результат (Result)                  Результат, полученный после прохождения шагов.
Ожидаемый результат (Expected Result)           Результат, который должен был быть после прохождения шагов.

Прикрепленный файл (Attachment)                 Cкриншот, видео или любой другой документ, который
                                                поможет прояснить причину ошибки.

	esc
	:wq
	
4. Запушить структуру багрепорта на внешний репозиторий
	git add bag_report.txt
	git commit -m "add bag_report.txt"
	git push
5. Вмержить ветку Bag Reports в Main
	git checkout main
	git merge Bag_Reports
6. Запушить main на внешний репозиторий.
	git push -u origin main
7. В ветке CheckLists набросать структуру чек листа.
	git checkout CheckLists
	touch checklist.txt
	vim checklist.txt
	insert
	Структура чек-листа

id	Проверка		Результат	Комментарий
1	Регистрация аккаунта	Пройдено
2	Авторизация		Пройдено
3	Восстановление пароля	Не удалось	bug#1
4	Изменение e-mail	Не удалось	bug#2
5	Удаление аккаунта	Пройдено
	esc
	:wq
	
8. Запушить структуру на внешний репозиторий
	git add checklist.txt
	git commit -m "add checklist.txt"
	git push
9. На внешнем репозитории сделать Pull Request ветки CheckLists в main
	На web-интерфейсе перейти в ветвь CheckLists 
	Нажать Compare & pull request
	Нажать create pull request
10. Синхронизировать Внешнюю и Локальную ветки Main
	git checkout main
	git pull origin main